# Based on this tutorial: https://github.com/marketplace/actions/ssh-deploy
name: Tests
on: [push]
jobs:
  angular-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Install Node.js
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      # Install frontend dependencies (NPM)
      - name: Install npm dependencies
        run: |
          npm install -g @angular/cli
          npm install
      # Copying files and artifacts via SSH
      - name: Build app
        run: |
          npm run ng build --prod
      - name: Run tests
        run: |
          ng test --no-watch --no-progress --browsers=ChromeHeadless --code-coverage --karma-config=karma.conf.js
      ## —— Upload tests coverage report to remote server
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Print branch name
        shell: bash
        run: echo ${{ steps.extract_branch.outputs.branch }}
      - name: Create directories for reports
        uses: appleboy/ssh-action@master
        env:
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
          FILES_PATH: ${{ secrets.GA_FILES_PATH }}
        with:
          envs: BRANCH,FILES_PATH
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ''
          script: mkdir -p $FILES_PATH/$BRANCH/coverage
      - name: Uploads reports to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ''
          rm: true
          source: "coverage"
          target: ${{ secrets.GA_FILES_PATH }}/${{ steps.extract_branch.outputs.branch }}/coverage
      ## —— Tests code coverage ✅check ———————————————————————————————————————————————————————————
      - name: Check test coverage
        id: test-coverage
        uses: johanvanhelden/gha-clover-test-coverage-check@v1
        with:
          percentage: "95"
          filename: "coverage/clover.xml"
      - name: Upload report to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/clover.xml
          flags: tests
          name: codecov-placeholder-service
          fail_ci_if_error: true
          verbose: true

